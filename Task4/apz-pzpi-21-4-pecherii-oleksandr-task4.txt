1 МЕТА РОБОТИ

Мета даної роботи полягає у створенні front-end частини даної системи та звіту з описом інженерних рішень та посиланнями на програмний код. Під час виконання лабораторної роботи повинно бути створено наступні діаграми: UML діаграма компонентів, UML діаграма прецедентів, UML діаграму станiв та UML діаграму дiяльностi.

2 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ

Системою користуються чотири типи акторів: гість, користувач, організатор та адміністратор. Під час першого використання система дозволяє гостю лише переглядати інформацію про організаторів та список запланованих діяльностей. Для доступу до іншого функціоналу гість повинен зареєструватися та увійти до системи.
Користувач може приєднуватися до діяльностей. Організатор має доступ до перегляду та редагування інформації про організаторів, діяльності та спорядження. Адміністратор має повний доступ до функціоналу та інформації в системі, а також може створювати запасні копії бази даних.
Для демонстрації вище означених сценаріїв була створена UML діаграма прецедентів (див. рис. 2.1).

3 ІНЖЕНЕРНІ РІШЕННЯ
3.1 Структура веб-клієнту системи

Обрання технології для цього проекту відбувалося на підстави функціональних вимог та особитсих навичок. Для написання веб-частини проекту був обраний React у поєднанні з JavaScript. Обрані технології дозволяють забезпечити високу продуктивність та ефективність системи.
Для роботи з формами та управлінням станом використовуються стандартні React хуки, такі як useState та useEffect, що спрощує управління станом та побудову логіки додатку. Axios використовується для здійснення HTTP-запитів до сервера, забезпечуючи зручний спосіб роботи з API.
Обраним архітектурним стилем є SPA (Single Page Application) – це тип веб-додатку, що взаємодіє з користувачем шляхом динамічного перезавантаження поточної веб-сторінки, замість завантаження нових сторінок з сервера. Це забезпечує швидший і більш інтерактивний користувацький досвід, оскільки більшість логіки програми виконується на стороні клієнта в браузері, а сервер виконує лише функції, пов'язані з даними.
Для більш детального відображення структуру веб-частини проекту була створена діаграма компонентів (див. рис. 3.1).

3.2 Стани веб-клієнту системи

Для опису поведінки системи та її станів, була розроблена та наведена діаграма станів (див. рис. 3.2). На ній було показано такі стани користувача, як неавторизований, авторизований, активний та стани в які переходить користувач в системі під час праці.

3.3 Діяльність веб-клієнту системи

Для демонстрації усіх можливих дій для користувача в системі була розроблена діаграма діяльності (див. рис. 3.3). На неї детально відображено які саме дії  доступні користувачеві та етапи, через які нужно пройти, що їх здійснити. 

3.4 Перевід значень глибини та часу

Система має функцію конвертацію значень глибини та часу і відображає їх на веб-сторінці діяльності (стр. 97-105). Код для цієї сторінки наведений у Додатку А. Головне призначення даного коду - це перевід значень глибини та часу занурення у різні системи вимірювання, такі як, наприклад, фіти.

4 ВИСНОВКИ

В результаті виконання лабораторної роботи була розроблена веб-клієнтська частина системи. Були розроблені діаграми для кращого розуміння сценарії використання системи, діаграма станів та діаграма компонентів системи. Також був зроблений запис, де було продемонстровано тестування системи
