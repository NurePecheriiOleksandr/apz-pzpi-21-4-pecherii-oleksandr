1 МЕТА РОБОТИ

Мета даної роботи полягає у створенні коду для IoT або SmartDevice частини проекту та звіту з описом інженерних рішень та посиланнями на програмний код. Під час виконання лабораторної роботи повинно бути створено наступні діаграми: UML діаграма взаємодії, UML діаграма прецедентів, UML діаграма діяльності та UML діаграму пакетів.

2 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ

IoT частина розробленого проекту взаємодіє з актором користувача, коли той робить занурення. Пристрій вимірює глибину та заміряє час запливу та відправляє дані на сервер, які потім виводяться у системі організатору занурення. Ця взаємодія представлена на діаграмі прецедентів (див. рис. 2.1).
За допомогою даної діаграми були окреслені функціональні вимоги до IoT частини проекту.	

3 ІНЖЕНЕРНІ РІШЕННЯ
3.1 Використані технології

Для реалізації функціональностей IoT частини системи використано мову програмування Arduino (.ino). Програма взаємодіє з сервером за допомогою бібліотеки WiFi та HTTPClient і використовує протокол HTTP для обміну даними.
Зчитування даних із сенсора реалізоване за допомогою бібліотеки HX711, яка забезпечує отримання даних з вагового датчика. Програма з'єднується з Wi-Fi мережею, після чого готова надсилати дані на сервер.
Надсилання даних реалізоване за допомогою HTTP POST-запиту, де дані формуються у форматі application/x-www-form-urlencoded. Відправляються дані про глибину занурення і тривалість занурення. Використання даного формату дозволяє структуровано представляти дані та забезпечує зручний обмін інформацією між IoT пристроєм і сервером.
Оптимізація коду здійснена для роботи на пристроях з обмеженою потужністю, забезпечуючи можливість легкого портування програми на реальні IoT пристрої. Використання бібліотеки HTTPClient у сполученні з мовою Arduino дозволяє досягти ефективного взаємодії та оптимального використання ресурсів пристрою для передачі даних на сервер.

3.2 Архітектурні рішення

Як було зазначено вище, для написання IoT частини системи була обрана мова програмування Arduino. Компіляція коду відбувається за допомогою Arduino IDE чи за допомогою Wokwi.
Для створення запитів відбувається за допомогою бібліотеки WiFi та HTTPClient. Для повного розуміння використаних технологій була створена діаграма пакетів (див. рис. 3.1).

Для демонстрації взаємодії пристрою з користувачем системи більш детально було розроблено діаграму взаємодії (див. додат. А.1). Окрім цього, на основі взаємодії пристрою було побудовано діаграму діяльності де можно побачити взаємодію пристрою з сервером (див. додат. Б.1).
За допомогою розроблених діаграм було визначено основні технології та архітектуру системи. Дані діаграми були представлені у додатках А та Б відповідно. Приклад коду функціональної реалізації IoT частини системи було представлено у додатку В.

4 ВИСНОВКИ

Результатом даної роботи є розроблена програмна реалізація IoT програмної частини та діаграми, що створенні для кращого розуміння її праці. Також був зроблений запис, де було продемонстровано тестування цієї частини системи (DEMO: https://youtu.be/ZT0oqpwG2L8)
